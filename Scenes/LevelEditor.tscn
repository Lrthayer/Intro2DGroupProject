[gd_scene load_steps=26 format=1]

[ext_resource path="res://Scenes/Attacker.tscn" type="PackedScene" id=1]
[ext_resource path="res://Raw Graphics/Structures/base003.png" type="Texture" id=2]
[ext_resource path="res://Raw Graphics/Structures/base004.png" type="Texture" id=3]
[ext_resource path="res://Raw Graphics/Structures/base005.png" type="Texture" id=4]
[ext_resource path="res://Mover.tex" type="Texture" id=5]
[ext_resource path="res://turret001.tex" type="Texture" id=6]
[ext_resource path="res://Scenes/Defender.xml" type="PackedScene" id=7]
[ext_resource path="res://Scenes/Defender.gd" type="Script" id=8]
[ext_resource path="res://Scenes/MoverLevelEditor.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scripts/Collided.gd" type="Script" id=10]
[ext_resource path="res://Graphics/Turrets/turret001.tex" type="Texture" id=11]
[ext_resource path="res://Graphics/UI/txt_prg_under.tex" type="Texture" id=12]
[ext_resource path="res://Graphics/UI/txt_prg_progress.tex" type="Texture" id=13]

[sub_resource type="GDScript" id=1]

script/source = "#var turrent = preload(\"res://Scenes/Turret.tscn\")
var turrent
var base = preload(\"res://Scenes/Base1.tscn\")
var base2 = preload(\"res://Scenes/Base2.tscn\")
var base3 = preload(\"res://Scenes/Base3.tscn\")
var ground = preload(\"res://Scenes/Turret.tscn\")
var stun = preload(\"res://Scenes/MoverLevelEditor.tscn\")
var parentArea = Area2D.new()
var areaCollider = CollisionShape2D.new()
#add a child
#get_parent().add_child(laserInstance)
var currentObject
var objectIndex = 0
var overButton = false
var pressed = false

#starts when loaded up in scene
func _ready():
	set_process(true)
	turrent = self.get_node(\"TurretArea\")
	print (parentArea.get_parent())
	print (areaCollider.get_parent())
	var attacker = get_node(\"Attacker\")
	currentObject = \"turrent\"

#called every frame
func _process(delta):
	var mosLoc = get_global_mouse_pos()
	var posOffset = Vector2(mosLoc.x-20, mosLoc.y-20);
	#get_child(1).set_global_pos(posOffset)
	if  Input.is_action_pressed(\"left_click\"):
		if !overButton && !pressed:
			var objectInstance = turrent.duplicate()
			#we have to manually copy signals over
			objectInstance.connect(\"mouse_enter\", self, \"_on_Area2D_mouse_enter\")
			objectInstance.connect(\"mouse_exit\", self, \"_on_Area2D_mouse_exit\")
			if currentObject == \"Base\":
				objectInstance = base.instance()
			elif currentObject == \"Base2\":
				objectInstance = base2.instance()
			elif currentObject == \"Base3\":
				objectInstance = base3.instance()
			elif currentObject == \"Mover\":
				objectInstance = stun.instance()
				objectInstance.get_child(1).connect(\"mouse_enter\", self, \"_on_Area2D_mouse_enter\")
				objectInstance.get_child(1).connect(\"mouse_exit\", self, \"_on_Area2D_mouse_exit\")
				objectInstance.get_child(2).connect(\"mouse_enter\", self, \"_on_Area2D_mouse_enter\")
				objectInstance.get_child(2).connect(\"mouse_exit\", self, \"_on_Area2D_mouse_exit\")
			elif currentObject == \"Turrent\":
				objectInstance = turrent.instance()
			#parentArea.add_child(objectInstance)
			#parentArea.add_child(areaCollider)
			objectInstance.set_global_pos(mosLoc)
			#give the copy a name 
			objectInstance.set_name(\"object\" + str(objectIndex))
			add_child(objectInstance)
			objectInstance.set_owner(self.get_parent())
			objectIndex += 1
			pressed = true
	else:
		pressed = false
func _on_Button_button_down(type):
	if type == \"Base\":
		currentObject = \"Base\"
	elif type == \"Base2\":
		currentObject = \"Base2\"
	elif type == \"Base3\":
		currentObject = \"Base3\"
	elif type == \"Mover\":
		currentObject = \"Mover\"
	elif type == \"Turrent\":
		currentObject = \"Turrent\"

func _on_Button_mouse_enter():
	overButton = true

func _on_Button_mouse_exit():
	overButton = false

func _on_Area2D_mouse_enter():
	overButton = true
	print(\"should not work\")

func _on_Area2D_mouse_exit():
	overButton = false
	print(\"should work\")
"

[sub_resource type="GDScript" id=2]

script/source = "func _ready():
	set_process(true)
	

#called every frame
func _process(delta):
	var currentPos = self.get_pos()
	if Input.is_action_pressed(\"left\"):
		self.set_pos(Vector2(currentPos.x + 2, currentPos.y))
	elif Input.is_action_pressed(\"right\"):
		self.set_pos(Vector2(currentPos.x - 2, currentPos.y))"

[sub_resource type="GDScript" id=3]

script/source = "extends KinematicBody2D

# class member variables
var btn_right = false
var btn_left = false
var btn_up = false
var btn_down = false
var current_speed = Vector2(0,0)
var player_speed = GLOBALS.g_defense_spd
var left_boundary
var right_boundary
var top_boundary
var bottom_boundary
var shipPositionY
var isStunned = false
var stunTimer = 60
var defendingScoreLimit = 0
var attacker
var diff

#Gives movement to Defender
func movement(speedX, speedY):
	
	#checks right boundary for Defender
	if get_global_pos().x > right_boundary:
		set_global_pos(Vector2(right_boundary, get_global_pos().y))
	
	#checks left boundary for Defender
	if get_global_pos().x < left_boundary:
		set_global_pos(Vector2(left_boundary,get_global_pos().y))
	
	if get_global_pos().y > bottom_boundary:
		set_global_pos(Vector2(get_global_pos().x, bottom_boundary))
	
	if get_global_pos().y < top_boundary:
		set_global_pos(Vector2(get_global_pos().x, top_boundary))

	current_speed.x = speedX
	current_speed.y = speedY
	#move the Defender
	move(current_speed)

	
func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	
	attacker = self.get_parent().get_parent().get_node(\"Attacker/KinematicBody2D/ShipSprite\")
	set_fixed_process(true)

func _fixed_process(delta):
	
	right_boundary = get_parent().get_child(3).get_child(0).get_global_pos().x - 42
	left_boundary = get_parent().get_child(4).get_child(0).get_global_pos().x + 42
	top_boundary = get_parent().get_child(1).get_child(0).get_global_pos().y + 42
	bottom_boundary = get_parent().get_child(2).get_child(0).get_global_pos().y - 42
	
	#rotate to protect bomber
	diff = attacker.get_global_pos() - self.get_global_pos()
	self.set_rot(atan2(-diff.y,diff.x) - 3.14/2)
	
	#Current Attacker is player1
	if (GLOBALS.g_current_attacker == \"player1\"):
		btn_right = Input.is_action_pressed(\"Player2_Right\")
		btn_left = Input.is_action_pressed(\"Player2_Left\")
		btn_up = Input.is_action_pressed(\"Player2_Up\")
		btn_down = Input.is_action_pressed(\"Player2_Down\")
	
	else:
		#Current Defender is player2
		btn_right = Input.is_action_pressed(\"Player1_Right\")
		btn_left = Input.is_action_pressed(\"Player1_Left\")
		btn_up = Input.is_action_pressed(\"Player1_Up\")
		btn_down = Input.is_action_pressed(\"Player1_Down\")
	
	#Defender is not stunned
	if(!isStunned):
		
		#Defender moves right
		if btn_right:
			movement(player_speed,0)
			
		#Defender moves left
		if btn_left:
			movement(-player_speed,0)
			
		if btn_down:
			movement(0,player_speed)
			
		if btn_up:
			movement(0, -player_speed)
	else:
		stunTimer-=1
		
		if(stunTimer < 0):
			isStunned = false
			stunTimer = 60

#defender is colliding with another object
func collided(dmg=0):
	
	# defender score has not reached the cap
	if defendingScoreLimit < 1500:
		
		#defender score goes to the right player
		if GLOBALS.g_current_attacker == \"player2\":
			GLOBALS.g_player1_defender_score += 100
			defendingScoreLimit += 100
		else:
			GLOBALS.g_player2_defender_score += 100
			defendingScoreLimit += 100
	

#Defender is stunned by laser
func stunned():
	isStunned = true
	

"

[sub_resource type="GDScript" id=4]

script/source = "#starts when loaded up in scene
func _ready():
	set_process(true)
#called every frame
func _process(delta):
	if Input.is_action_pressed(\"CameraUp\"):
		move(0,-10)
	if Input.is_action_pressed(\"CameraDown\"):
		move(0,10)
	if Input.is_action_pressed(\"CameraLeft\"):
		move(-10,0)
	if Input.is_action_pressed(\"CameraRight\"):
		move(10,0)
		
	#check if camera has moved passed scroll current limit
	if get_child(0).get_child(0).get_max() < get_global_pos().x:
		get_child(0).get_child(0).set_max(get_global_pos().x)
	if get_child(1).get_child(0).get_max() < get_global_pos().y:
		get_child(1).get_child(0).set_max(get_global_pos().y)
	if get_child(0).get_child(0).get_min() > get_global_pos().x:
		get_child(0).get_child(0).set_min(get_global_pos().x)
	if get_child(1).get_child(0).get_min() > get_global_pos().y:
		get_child(1).get_child(0).set_min(get_global_pos().y)
	
func move(x, y):
	self.set_global_pos(Vector2(self.get_global_pos().x + x,self.get_global_pos().y + y))
	#move cursors
	get_child(0).get_child(0).set_value(self.get_global_pos().x + x)
	get_child(1).get_child(0).set_value(self.get_global_pos().y + y)

func _on_HScrollBar_value_changed( value ):
	pass#self.set_global_pos(Vector2(value,self.get_global_pos().y))

func _on_VScrollBar_value_changed( value ):
	pass#self.set_global_pos(Vector2(self.get_global_pos().x, value))
"

[sub_resource type="RectangleShape2D" id=5]

custom_solver_bias = 0.0
extents = Vector2( 512.656, 31.6259 )

[sub_resource type="GDScript" id=6]

script/source = "extends Area2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

var clicked = false
var toggled = 0

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass


func _input_event( viewport, event, shape_idx ):
	if event.type == InputEvent.MOUSE_BUTTON:
		if event.button_index == BUTTON_LEFT:
			if event.pressed && toggled < 1:
				if clicked:
					clicked = false
					print(\"false\")
				else:
					clicked = true
					print(\"true\")
				toggled += 1
	else:
		toggled = 0"

[sub_resource type="GDScript" id=7]

script/source = "extends HScrollBar

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	set_process(true)
	
func _process(delta):
	pass#set_global_pos(get_parent().get_child(7).get_global_pos())"

[sub_resource type="RectangleShape2D" id=8]

custom_solver_bias = 0.0
extents = Vector2( 13.6842, 518.641 )

[sub_resource type="GDScript" id=9]

script/source = "extends CollisionShape2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	set_process(true)
	
func _process(delta):
	self.set_global_pos(get_parent().get_child(0).get_global_pos())"

[sub_resource type="RectangleShape2D" id=10]

custom_solver_bias = 0.0
extents = Vector2( 22.1984, 35.424 )

[sub_resource type="GDScript" id=11]

script/source = "extends Node2D

# class member variables go here
var laserObject = preload(\"res://Scenes/enemyLaser.tscn\")
var laserCount = 0
var laserOffset = 0
var theirPos
var myPos
var target
var diff
var rotate
var timer = 1
var rateIncrease = 0
var vector = Vector2(0,0)

#starts when loaded up in scene
func _ready():
	set_process(true)
	target = self.get_parent().get_parent().get_node(\"Attacker/KinematicBody2D/ShipSprite\")
	# Called every time the node is added to the scene.
	# Initialization her

#called every frame
func _process(delta):
	
	#increase rate of fire of the turrent over time
	rateIncrease += .00001
	theirPos = target.get_global_pos()
	myPos = self.get_global_pos()
	diff = theirPos - myPos
	rotate = atan2(-diff.y,diff.x) - 3.14/2
	self.set_rot(rotate)
	vector = (theirPos - myPos).normalized()
	timer = timer - (delta + rateIncrease)
	
	#enough time has passed
	if (timer <= 0):
		fire()
		timer = 5

#turret shoots laser
func fire():
	
	laserCount += 1
	
	#create a copy of the laser object
	var laserInstance = laserObject.instance()
	
	#give the copy a name 
	laserInstance.set_name(\"Laser\" + str(laserCount))
		
	#add a child
	get_parent().add_child(laserInstance)
	
	laserInstance.set_owner(self.get_parent())
	
	laserInstance.setDirVector(rotate, vector)
	
	#set the position of the laser copy
	laserInstance.set_global_pos(get_node(\"Position2D\").get_global_pos())"

[sub_resource type="RectangleShape2D" id=12]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[node name="Node2D" type="Node2D"]

transform/pos = Vector2( 13, 30 )
z/relative = false
script/script = SubResource( 1 )

[node name="Attacker" parent="." instance=ExtResource( 1 )]

transform/pos = Vector2( -2173.55, -1769.16 )
transform/scale = Vector2( 1.29688, 1.29688 )

[node name="Panel" type="Panel" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = -842.0
margin/right = 53.0
margin/bottom = -812.0

[node name="Button" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = -452.0
margin/top = -652.0
margin/right = -139.0
margin/bottom = -518.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Base 1"
icon = ExtResource( 2 )
flat = false
script/script = SubResource( 2 )

[node name="Button1" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = -127.0
margin/top = -654.0
margin/right = 266.0
margin/bottom = -520.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Base 2"
icon = ExtResource( 3 )
flat = false
script/script = SubResource( 2 )

[node name="Button2" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 279.0
margin/top = -653.0
margin/right = 736.0
margin/bottom = -519.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Base 3"
icon = ExtResource( 4 )
flat = false
script/script = SubResource( 2 )

[node name="Button3" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 746.0
margin/top = -617.0
margin/right = 862.0
margin/bottom = -553.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Mover"
icon = ExtResource( 5 )
flat = false
script/script = SubResource( 2 )

[node name="Button4" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 879.0
margin/top = -624.0
margin/right = 995.0
margin/bottom = -546.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Turrent"
icon = ExtResource( 6 )
flat = false
script/script = SubResource( 2 )

[node name="Defender" parent="." instance=ExtResource( 7 )]

editor/display_folded = true
transform/pos = Vector2( -1710.08, -599.024 )
script/script = ExtResource( 8 )

[node name="KinematicBody2D" parent="Defender"]

script/script = SubResource( 3 )

[node name="Area2D 2" parent="Defender"]

editor/display_folded = true

[node name="Area2D4" parent="Defender"]

editor/display_folded = true

[node name="Camera2D" type="Camera2D" parent="."]

transform/pos = Vector2( 31.3008, -781.602 )
anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 1, 1 )
limit/left = -10000000
limit/top = -10000000
limit/right = 10000000
limit/bottom = 10000000
drag_margin/h_enabled = false
drag_margin/v_enabled = false
smoothing/enable = false
smoothing/speed = 5.0
drag_margin/left = 0.0
drag_margin/top = 0.0
drag_margin/right = 0.0
drag_margin/bottom = 0.0
script/script = SubResource( 4 )

[node name="HBarArea2D" type="Area2D" parent="Camera2D"]

transform/pos = Vector2( -511, 284 )
input/pickable = true
shapes/0/shape = SubResource( 5 )
shapes/0/transform = Matrix32( 0.994363, 0, 0, 0.585169, 500.343, -2.13093 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
script/script = SubResource( 6 )

[node name="HScrollBar" type="HScrollBar" parent="Camera2D/HBarArea2D"]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 0.0
margin/top = -3.0
margin/right = 1015.0
margin/bottom = 16.0
range/min = 0.0
range/max = 100.0
range/step = 0.0
range/page = 0.0
range/value = 1.0
range/exp_edit = false
range/rounded = false
custom_step = -1.0
script/script = SubResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Camera2D/HBarArea2D"]

transform/pos = Vector2( 500.343, -2.13093 )
transform/scale = Vector2( 0.994363, 0.585169 )
shape = SubResource( 5 )
trigger = false
_update_shape_index = 0

[node name="VBarArea2D" type="Area2D" parent="Camera2D"]

input/pickable = true
shapes/0/shape = SubResource( 8 )
shapes/0/transform = Matrix32( 0.994363, 0, 0, 0.564895, -502.305, -10.9558 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="VScrollBar" type="VScrollBar" parent="Camera2D/VBarArea2D"]

rect/rotation = 180.0
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 0
size_flags/vertical = 2
margin/left = -494.0
margin/top = 281.0
margin/right = -477.0
margin/bottom = 859.0
range/min = 0.0
range/max = 100.0
range/step = 1.0
range/page = 0.0
range/value = 1.0
range/exp_edit = false
range/rounded = false
custom_step = -1.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Camera2D/VBarArea2D"]

transform/pos = Vector2( -502.305, -10.9558 )
transform/scale = Vector2( 0.994363, 0.564895 )
shape = SubResource( 8 )
trigger = false
_update_shape_index = 0

[node name="Mover" parent="." instance=ExtResource( 9 )]

editor/display_folded = true
transform/pos = Vector2( 265.519, -909.646 )

[node name="KinematicBody2D" parent="Mover"]

transform/pos = Vector2( -36.4862, -10.8389 )
transform/scale = Vector2( 1.14837, 1 )
input/pickable = true

[node name="CollisionShape2D" parent="Mover/KinematicBody2D"]

transform/pos = Vector2( -0.106045, 5.97396 )
transform/scale = Vector2( 3.23953, 1.60646 )
script/script = SubResource( 9 )

[node name="Position2D" parent="Mover/KinematicBody2D"]

visibility/visible = false

[node name="TurretArea" type="Area2D" parent="."]

transform/pos = Vector2( 214.385, -763.536 )
input/pickable = true
shapes/0/shape = SubResource( 10 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="Turret" type="Node2D" parent="TurretArea"]

script/script = SubResource( 11 )

[node name="StaticBody2D" type="StaticBody2D" parent="TurretArea/Turret"]

input/pickable = false
shapes/0/shape = SubResource( 12 )
shapes/0/transform = Matrix32( 2.06324, 0, 0, 3.63881, 0.45375, 0.313156 )
shapes/0/trigger = false
collision/layers = 8
collision/mask = 0
constant_linear_velocity = Vector2( 0, 0 )
constant_angular_velocity = 0.0
friction = 1.0
bounce = 0.0
script/script = ExtResource( 10 )

[node name="Sprite" type="Sprite" parent="TurretArea/Turret/StaticBody2D"]

texture = ExtResource( 11 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="TurretArea/Turret/StaticBody2D"]

transform/pos = Vector2( 0.45375, 0.313156 )
transform/scale = Vector2( 2.06324, 3.63881 )
shape = SubResource( 12 )
trigger = false
_update_shape_index = 0

[node name="Hp" type="TextureProgress" parent="TurretArea/Turret/StaticBody2D"]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = -48.0
margin/top = 41.0
margin/right = 48.0
margin/bottom = 49.0
range/min = 0.0
range/max = 3.0
range/step = 1.0
range/page = 0.0
range/value = 3.0
range/exp_edit = false
range/rounded = false
texture/under = ExtResource( 12 )
texture/over = null
texture/progress = ExtResource( 13 )
radial_fill/initial_angle = 1.0
radial_fill/fill_degrees = 360.0
radial_fill/center_offset = Vector2( 0, 0 )

[node name="Position2D" type="Position2D" parent="TurretArea/Turret"]

transform/pos = Vector2( 1, -41 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="TurretArea"]

shape = SubResource( 10 )
trigger = false
_update_shape_index = 0

[connection signal="input_event" from="Attacker/Area2D1" to="." method="_on_Area2D_input_event"]

[connection signal="mouse_enter" from="Attacker/Area2D1" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Attacker/Area2D1" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Attacker/Area2D2" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Attacker/Area2D2" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Attacker/Area2D3" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Attacker/Area2D3" to="." method="_on_Area2D_mouse_exit"]

[connection signal="button_down" from="Button" to="." method="_on_Button_button_down" binds= [ "Base" ]]

[connection signal="mouse_enter" from="Button" to="." method="_on_Button_mouse_enter"]

[connection signal="mouse_exit" from="Button" to="." method="_on_Button_mouse_exit"]

[connection signal="pressed" from="Button" to="." method="_on_Button_pressed" binds= [ "Base1" ]]

[connection signal="button_down" from="Button1" to="." method="_on_Button_button_down" binds= [ "Base2" ]]

[connection signal="mouse_enter" from="Button1" to="." method="_on_Button_mouse_enter"]

[connection signal="mouse_exit" from="Button1" to="." method="_on_Button_mouse_exit"]

[connection signal="pressed" from="Button1" to="." method="_on_Button1_pressed" binds= [ "Base2" ]]

[connection signal="pressed" from="Button1" to="." method="_on_Button_pressed" binds= [ "Base2" ]]

[connection signal="button_down" from="Button2" to="." method="_on_Button_button_down" binds= [ "Base3" ]]

[connection signal="mouse_enter" from="Button2" to="." method="_on_Button_mouse_enter"]

[connection signal="mouse_exit" from="Button2" to="." method="_on_Button_mouse_exit"]

[connection signal="button_down" from="Button3" to="." method="_on_Button_button_down" binds= [ "Mover" ]]

[connection signal="mouse_enter" from="Button3" to="." method="_on_Button_mouse_enter"]

[connection signal="mouse_exit" from="Button3" to="." method="_on_Button_mouse_exit"]

[connection signal="button_down" from="Button4" to="." method="_on_Button_button_down" binds= [ "Turrent" ]]

[connection signal="mouse_enter" from="Button4" to="." method="_on_Button_mouse_enter"]

[connection signal="mouse_exit" from="Button4" to="." method="_on_Button_mouse_exit"]

[connection signal="mouse_enter" from="Defender/Area2D" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Defender/Area2D" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Defender/Area2D 2" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Defender/Area2D 2" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Defender/Area2D3" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Defender/Area2D3" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Defender/Area2D4" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Defender/Area2D4" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Camera2D/HBarArea2D" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Camera2D/HBarArea2D" to="." method="_on_Area2D_mouse_exit"]

[connection signal="value_changed" from="Camera2D/HBarArea2D/HScrollBar" to="Camera2D" method="_on_HScrollBar_value_changed"]

[connection signal="mouse_enter" from="Camera2D/VBarArea2D" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Camera2D/VBarArea2D" to="." method="_on_Area2D_mouse_exit"]

[connection signal="value_changed" from="Camera2D/VBarArea2D/VScrollBar" to="Camera2D" method="_on_VScrollBar_value_changed"]

[connection signal="input_event" from="Mover/KinematicBody2D" to="Mover" method="_on_KinematicBody2D_input_event"]

[connection signal="mouse_enter" from="Mover/KinematicBody2D" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Mover/KinematicBody2D" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Mover/Area2D" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Mover/Area2D" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="Mover/Area2D 2" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="Mover/Area2D 2" to="." method="_on_Area2D_mouse_exit"]

[connection signal="mouse_enter" from="TurretArea" to="." method="_on_Area2D_mouse_enter"]

[connection signal="mouse_exit" from="TurretArea" to="." method="_on_Area2D_mouse_exit"]


[editable path="Attacker"]
[editable path="Defender"]
[editable path="Mover"]
